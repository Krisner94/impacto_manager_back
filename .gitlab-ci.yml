stages:
  - build
  - test
  - quality
  - security
  - deploy-test
  - notification

maven-build:
  image: maven:3.9.4-eclipse-temurin-21
  stage: build
  script: "mvn clean package -DskipTests"
  artifacts:
    paths:
      - target/gitlab-ci-demo.jar
  only:
    - merge_requests
    - main
    - dev

maven-test:
  image: maven:3.9.4-eclipse-temurin-21
  stage: test
  script:
    - mvn test -Dtest=!application.impacto_manager_back.ImpactoManagerBackApplicationTests
  artifacts:
    when: always
    reports:
      junit: target/surefire-reports/*.xml
  only:
    - merge_requests
    - main
    - dev

code-quality:
  image: maven:3.9.4-eclipse-temurin-21
  stage: quality
  script:
    - mvn checkstyle:check
    - mvn pmd:check
    - mvn spotbugs:check
  only:
    - merge_requests
    - main
    - dev
  allow_failure: true

dependency-check:
  image: owasp/dependency-check:latest
  stage: security
  variables:
    PROJECT_NAME: "springboot-app"
  script:
    - /usr/share/dependency-check/bin/dependency-check.sh \
        --project "$PROJECT_NAME" \
        --scan . \
        --format "HTML" \
        --out dependency-check-report
  artifacts:
    paths:
      - dependency-check-report
    when: always
    expire_in: 1 week
  only:
    - merge_requests
    - main
    - dev
  allow_failure: true

deploy-test:
  image: alpine:latest
  stage: deploy-test
  before_script:
    - apk add --no-cache openssh
    - eval $(ssh-agent -s)
    - echo "$SSH_PRIVATE_KEY" | tr -d '\r' | ssh-add -
    - mkdir -p ~/.ssh
    - chmod 700 ~/.ssh
    - ssh-keyscan server >> ~/.ssh/known_hosts
  script:
    - echo "Deploying to test environment..."
    - ssh user@server "docker pull registry.gitlab.com/impacto-manager/back/impacto_manager_back:latest && docker-compose up -d"
  only:
    - dev

notifications:
  image: curlimages/curl:latest
  stage: notification
  script:
    - >
      curl -X POST -H "Content-type: application/json"
      --data '{"text":"Pipeline finalizada com sucesso!"}'
      $SLACK_WEBHOOK_URL
  when: always
